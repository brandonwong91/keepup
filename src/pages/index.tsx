import { SignIn, SignOutButton, useUser } from "@clerk/nextjs";
import {
  Card,
  Button,
  Display,
  Text,
  Divider,
  Page,
  Input,
  Textarea,
  Badge,
} from "@geist-ui/core";
import { List } from "@prisma/client";
import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
// import Link from "next/link";

import { api } from "~/utils/api";

const Home: NextPage = () => {
  const user = useUser();
  const { data } = api.lists.getAll.useQuery({ userId: user.user?.id ?? "" });
  const { mutate } = api.lists.create.useMutation({
    onSuccess: () => {
      void api.useContext().lists.getAll.invalidate();
    },
  });
  const [input, setInput] = useState("");
  const handleAdd = (e: any) => {
    mutate({
      name: input,
      userId: user.user?.id ?? "",
      status: "added",
    });
  };
  return (
    <>
      <Head>
        <title>Keep Up</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {!user.isSignedIn && (
          <div className="flex h-screen items-center justify-center">
            <Display shadow>
              <Text h1 className="mx-4 bg-transparent">{`Keep Up`}</Text>
              <SignIn />
            </Display>
          </div>
        )}
        {!!user.isSignedIn && user.user.firstName && (
          <Page>
            <Page.Header>
              <div className="mt-4">
                <Card>
                  <div className="flex justify-between">
                    <div className="self-center text-xl">{`Hi there, ${user.user.firstName}`}</div>
                    <Button type="secondary" auto>
                      <SignOutButton />
                    </Button>
                  </div>
                </Card>
              </div>
            </Page.Header>
            <Page.Content>
              <div className="grid gap-4">
                <div className="flex gap-x-1">
                  <Input
                    label="Note name"
                    clearable
                    onChange={(event) => {
                      setInput(event.target.value);
                    }}
                  />
                  <Button auto scale={0.8} onClick={handleAdd}>
                    Add
                  </Button>
                </div>
                {data &&
                  data.length > 0 &&
                  data.map((list: List) => (
                    <Card key={list.id}>
                      <div className="flex justify-between">
                        <div>{list.name}</div>
                        <Badge type="success">
                          {list.createdAt.toLocaleDateString()}
                        </Badge>
                      </div>
                    </Card>
                  ))}
              </div>
            </Page.Content>
          </Page>
        )}
      </main>
    </>
  );
};

export default Home;
